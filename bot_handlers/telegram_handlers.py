# bot_handlers/telegram_handlers.py
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from arizona.arizona_api_client import arizona_api

class TelegramBotHandlers:
    def __init__(self, bot: Bot):
        self.bot = bot
        self.dp = Dispatcher()

        # Register handlers
        self.dp.message.register(self.cmd_start, Command("start"))
        self.dp.message.register(self.cmd_servers, Command("servers"))
        self.dp.message.register(self.cmd_stats, Command("stats"))

    async def start_polling(self):
        await self.dp.start_polling(self.bot, skip_updates=True)

    async def cmd_start(self, message: types.Message):
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø InfoBot.\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/servers ‚Äî —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å\n"
            "/stats <–Ω–∏–∫> <ID —Å–µ—Ä–≤–µ—Ä–∞> ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞\n\n"
            "–ü—Ä–∏–º–µ—Ä: /stats Vlad_Mensem 18"
        )

    async def cmd_servers(self, message: types.Message):
        # Try to fetch API status, fallback to static list inside client
        text = await arizona_api.get_servers_status_from_api()
        # send as plain text (API returns some markdown/asterisks ‚Äî Telegram will show them as is)
        await message.answer(text)

    async def cmd_stats(self, message: types.Message):
        args = message.text.strip().split()
        if len(args) != 3:
            return await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /stats <–Ω–∏–∫> <ID —Å–µ—Ä–≤–µ—Ä–∞>\n–ü—Ä–∏–º–µ—Ä: /stats Vlad_Mensem 18")

        nickname = args[1]
        try:
            server_id = int(args[2])
        except ValueError:
            return await message.answer("‚ùå ID —Å–µ—Ä–≤–µ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")

        valid_nick, err = arizona_api.validate_nickname(nickname)
        if not valid_nick:
            return await message.answer(f"‚ùå {err}")

        valid_srv, err = arizona_api.validate_server_id(server_id)
        if not valid_srv:
            return await message.answer(f"‚ùå {err}")

        await message.answer("‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞...")
        data, error = await arizona_api.fetch_player_stats(nickname, server_id)
        if error:
            return await message.answer(error)

        result = arizona_api.format_stats(data, nickname, server_id)
        await message.answer(result)
